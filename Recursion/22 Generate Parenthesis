class Solution {
    List<String> ans = new ArrayList<>();
    public List<String> generateParenthesis(int n) {
        backtrack(n,"",0,0,ans);
        return ans;
    }
    public void backtrack(int n,String str,int open,int close, List<String> ans){
        if(str.length() == 2*n){
            ans.add(str);
            return;
        }
        if(open < n){
            backtrack(n,str+"(",open +1,close,ans);
        }
        if(close < open){
            backtrack(n, str+")",open,close+1,ans);
        }
}
}
