

class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        // check for connected componenets
        boolean[] vis = new boolean[V];
        for(int i=0;i< V;i++){
            if(!vis[i]){
                if(cycle(i,-1,vis,adj)) return true;
            }
        }
        return false;
    }
    public boolean cycle(int node,int parent, boolean[] visited, ArrayList<ArrayList<Integer>> adj){
        visited[node] = true;
        
        for(int i : adj.get(node)){
            if(!visited[i]){
                if(cycle(i,node,visited,adj)) return true; 
                
            }
            else if(i != parent) return true;
        }
        return false;
    }
}
