// Memoization
class Solution {
    public int uniquePaths(int m, int n) {
        int dp[][] = new int[m][n];
        for(int[] arr : dp){
            Arrays.fill(arr,-1);
        }
        return f(m-1,n-1,dp);
    }
    public int f(int m, int n, int[][] dp){
        //base case , 1 denotes the path exists
        if(m==0 && n==0){
            return 1;
        }
        if( m <0 || n<0){
            return 0;
        }
        if(dp[m][n] != -1){
            return dp[m][n];
        }
        //up
        int up = f(m-1,n,dp);
        //left 
        int left= f(m,n-1,dp);
        return dp[m][n] = up+ left;
    }
}
