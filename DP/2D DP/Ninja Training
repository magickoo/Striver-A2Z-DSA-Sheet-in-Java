class Solution{
    public int maximumPoints(int points[][],int N){
        //initialize a dp array
        int dp[][] = new int[N][4];
        for(int[] row : dp){
            Arrays.fill(row,-1);
        }
        
        return f(N-1,3,points,dp);
    }
    static int f(int day, int last,int point[][],int[][] dp){
        //if result is already calculated return
        
        if(dp[day][last] != -1){
            return dp[day][last];
        }
        
        // base case
        if(day == 0){
            int maxi = 0;
            for(int i=0 ; i<=2 ;i++){
                if(i != last){
                    maxi = Math.max(maxi, point[0][i]);
                }
            }
            return dp[day][last] = maxi; 
        }
        
        int maxi = 0;
        
        // loop through the three ativities on the current day
        for(int i=0 ; i<=2 ; i++){
            if( i!= last){
                int act = point[day][i] + f(day-1,i,point,dp);
                maxi = Math.max(maxi,act);
            }
        }
        
        return dp[day][last] = maxi;
    }
}
