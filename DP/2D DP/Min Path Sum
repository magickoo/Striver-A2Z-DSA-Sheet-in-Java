class Solution {
    public int minPathSum(int[][] grid) {
        int m= grid.length;
        int n= grid[0].length;
        int [][]dp = new int[m][n];
        
        return f(m,n,grid,dp);
    }
    public int f(int m,int n,int[][] grid, int[][] dp){
        for(int i=0 ;i<m;i++){
            for(int j=0;j<n;j++){
        
        //base case
        if(i== 0 && j==0){
            dp[i][j]= grid[0][0];
        }
        else{
        
        //int sum = dp[m,n];
        int up = grid[i][j];
        if(i>0){
        up += dp[i-1][j];
        }
        else{
            up += (int)Math.pow(10,9);
        }
        int left = grid[i][j];
        if(j>0){
            left += dp[i][j-1];
        }
        else{
            left += (int)Math.pow(10,9);
        }

        dp[i][j] = Math.min(up,left);
    
            }
        }
        }
        return dp[m-1][n-1] ; 

    }
}
