class Solution {
    public int maxProfit(int[] prices) {
        int n= prices.length;
        int [][] dp = new int [n][2];
        for(int[] a: dp){
            Arrays.fill(a,-1);
        }
        return f(0,0,prices,n,dp);
    }
    public int f(int ind,int buy,int[] prices, int n,int[][] dp){

        if(ind == n){
            return 0;
        }
        if(dp[ind][buy] !=-1){
            return dp[ind][buy];
        }
        int profit = 0;
        // we can buy (0)
        if(buy == 0){
           profit  = Math.max(-prices[ind] + f(ind+1,1,prices,n,dp),f(ind+1,0,prices,n,dp));

        }
        // we can sell
        if(buy == 1){
            profit = Math.max(prices[ind] + f(ind+1,0,prices,n,dp),f(ind+1,1,prices,n,dp));

        }
        dp[ind][buy] = profit;
        return profit;

    }
}
