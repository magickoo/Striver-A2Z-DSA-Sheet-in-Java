class Solution {
    public int longestPalindromeSubseq(String s) {
        int n= s.length();
        StringBuilder str = new StringBuilder();
        str.append(s);
        str.reverse();
        String t = str.toString();
        int dp[][] = new int[n+1][n+1];
        return f(n,s,t,dp);
    }
    public int f(int n,String s, String t,int[][] dp){
       //base case
       for(int i=0;i<=n;i++){
        dp[i][0] = 0;
       }
       for(int i=0; i<=n ;i ++){
        dp[0][i] = 0;
       }

       for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            if(s.charAt(i-1) == t.charAt(j-1)){
                dp[i][j] = 1+ dp[i-1][j-1];
            }
            else{
                dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]);
            }
        }
       }
       return dp[n][n];
    }
}
