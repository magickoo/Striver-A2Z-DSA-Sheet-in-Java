class Solution {
    public int rob(int[] nums) {
        int [] dp = new int[nums.length-1];
        if(nums.length == 1){
            return nums[0];
        }
        if(nums.length ==2){
            return Math.max(nums[0],nums[1]);
        }
        int[] arr1 = new int[nums.length-1];
        int[] arr2 = new int[nums.length-1];
        for(int i=0;i<nums.length;i++){
            if(i!=0){
                arr1[i-1] = nums[i];
            }
            if(i!= nums.length-1){
                arr2[i] = nums[i];
            }
        }
        
        int ans1= solve(arr1,dp);
        int ans2= solve(arr2,dp);
        int ans =Math.max(ans1,ans2);
        return ans;
    }
    public int solve(int[] nums,int [] dp){
        //base case
        int n= nums.length;
        dp[0] = nums[0];

        for(int i=1;i<n;i++){
            int take = nums[i];
            if(i>1){
                 take += dp[i-2];
            }
            int nottake = dp[i-1];

            dp[i] = Math.max(take,nottake);
        }
        
        return dp[n-1];
    }
}
