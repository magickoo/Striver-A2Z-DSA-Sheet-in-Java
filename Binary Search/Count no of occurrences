class Solution {
    int count(int[] arr, int n, int x) {
        // code here
        int first = firstocc(arr,n,x);
        if(first == -1) return 0;
        int last = lastocc(arr,n,x);
        return ((last-first) + 1);
    }
    int firstocc(int[] arr, int n,int x){
        int low = 0;
        int high = n-1;
        int first = -1;
        while(low<=high){
            int mid = (low+high)/2;
            if(arr[mid] == x){
                first = mid;
                // go to left
                high = mid - 1;
            }
            else if(arr[mid] < x){
                // go ot right
                low = mid +1;
                
            }
            else{
                high = mid -1;
            }
            
        }
        return first;
    }
       int lastocc(int[] arr, int n,int x){
        int low = 0;
        int high = n-1;
        int last = -1;
        while(low<=high){
            int mid = (low+high)/2;
            if(arr[mid] == x){
                last = mid;
                // go to right
                low = mid + 1;
            }
            else if(arr[mid] < x){
                // go ot right
                low = mid +1;
                
            }
            else{
                high = mid -1;
            }
            
        }
        return last;
    }
}
