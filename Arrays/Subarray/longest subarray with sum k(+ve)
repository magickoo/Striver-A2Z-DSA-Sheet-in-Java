2) hashmap
class Solution{
  
    public static int lenOfLongSubarr (int A[], int N, int K) {
        int maxi = 0;
        
        HashMap<Integer,Integer> hm = new HashMap<>();
        int s=0;
        
        for(int i=0;i <N ;i++){
            s += A[i];
            
             if (s == K) {
                maxi = Math.max(maxi, i + 1);
            }
            // calculate the sum of remaining part i.e. x-k:
            int rem = s - K;

            if(hm.containsKey(rem)){
                hm.put(s,i);
                maxi = Math.max(maxi,(i-hm.get(rem)));
                
            }
            if(!hm.containsKey(rem)){
                hm.put(s,i);
                
            }
        }
        return maxi;
    }
}
3) 2 pointer(+ve nos )

class Solution{
    public static int lenOfLongSubarr (int A[], int N, int K) {
        //Complete the function
        int i = 0; 
        int j =0 ;
        int sum = 0;
        int maxlen =0 ;
         while(i <N && j<N){
            sum += A[j];
            if(sum == K){
                maxlen = Math.max(maxlen,(j-i+1));
            }
            if(i<= j && sum > K){
                sum = sum - A[i];
                i++;
            }
            j++;
        }
        return maxlen;
    }
}





