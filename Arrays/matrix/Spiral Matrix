class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> ans = new ArrayList<>();
        int m = matrix.length;
        int n = matrix[0].length;
        int startRow=0;
        int startCol=0;
        int endRow = m-1;
        int endCol = n-1;
        int k = m*n;
        
        while(startRow <= endRow && startCol<=endCol){
            // i-> row , j->coloumn
            //print top elements
            for(int j=startCol ; j<=endCol; j++){
                ans.add(matrix[startRow][j]);
            }
            startRow++;
            //print right elements
            for(int i=startRow ; i<=endRow; i++){
                ans.add(matrix[i][endCol]);
            }
            endCol--;
            if(startRow <= endRow){
            //print bottom elements
            for(int j=endCol ;j>=startCol ; j--){
                ans.add(matrix[endRow][j]);
            }
            endRow--;
            }
            //print left elements
            if(startCol <= endCol){
            for(int i=endRow ;i>=startRow ; i--){
                ans.add(matrix[i][startCol]);
            }
            startCol++;
            
            }
    }
    return ans;
    }
}
